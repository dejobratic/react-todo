{"version":3,"sources":["app/common/ToastReducer.js","app/common/ToastContext.jsx","app/components/Toast.jsx","app/components/ToastCollection.jsx","app/services/RestService.js","app/models/TodoItem.js","app/services/TodoItemService.js","app/common/TodoItemReducer.js","app/common/TodoItemContext.jsx","app/models/Toast.js","app/components/TodoItem.jsx","app/components/TodoItemCollection.jsx","app/components/NewTodoItem.jsx","app/views/TodoList.jsx","app/App.jsx","index.jsx"],"names":["toastReducer","toasts","action","type","payload","filter","toast","id","Error","ToastContext","createContext","ToastProvider","children","useReducer","dispatchToast","Provider","value","Toast","useState","isVisible","setVisibility","useContext","show","onClose","toastId","Header","className","title","Body","message","ToastCollection","console","log","aria-live","aria-atomic","style","position","top","right","map","key","restService","url","fetch","response","json","TodoItem","isCompleted","creatorId","this","Math","floor","random","todoItemService","get","rawTodoItems","todoItem","userId","completed","todoItemReducer","todoItems","TodoItemContext","TodoItemProvider","dispatchTodoItems","useEffect","a","getAll","generateId","visibilityDuration","CompletedTodoItemTitle","Form","Label","UncompletedTodoItemTitle","todoItemTitle","ListGroup","Item","onClick","todoItemId","Group","Row","Col","xs","Button","size","variant","TodoItemCollection","reverse","NewTodoItem","placeholder","setTodoItemTitle","InputGroup","FormControl","aria-label","aria-describedby","onChange","event","target","Append","exec","MyTodoList","TodoList","App","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a35ef82c.chunk.js","sourcesContent":["const ADD_TOAST = \"add-toast\"\r\nconst REMOVE_TOAST = \"remove-toast\"\r\n\r\nconst toastReducer = (toasts, action) => {\r\n  switch (action.type) {\r\n    case ADD_TOAST:\r\n      return [...toasts, action.payload]\r\n    case REMOVE_TOAST:\r\n      return toasts.filter((toast) => toast.id === action.payload)\r\n    default:\r\n      throw Error(`Unhandled toast reducer action type ${action.type}`)\r\n  }\r\n}\r\n\r\nexport { toastReducer }\r\nexport { ADD_TOAST, REMOVE_TOAST }\r\n","import React, { useReducer, createContext } from \"react\"\r\n\r\nimport { toastReducer } from \"app/common/ToastReducer\"\r\n\r\nconst ToastContext = createContext({})\r\n\r\nconst ToastProvider = ({ children }) => {\r\n  const [toasts, dispatchToast] = useReducer(toastReducer, [])\r\n\r\n  return (\r\n    <ToastContext.Provider value={{ toasts, dispatchToast }}>\r\n      {children}\r\n    </ToastContext.Provider>\r\n  )\r\n}\r\n\r\nexport { ToastContext, ToastProvider }\r\n","import React, { useState, useContext } from \"react\"\r\nimport { Toast as BootstrapToast } from \"react-bootstrap\"\r\n\r\nimport { ToastContext } from \"app/common/ToastContext\"\r\nimport { REMOVE_TOAST } from \"app/common/ToastReducer\"\r\n\r\nconst Toast = ({ toast = {} }) => {\r\n  const [isVisible, setVisibility] = useState(true)\r\n\r\n  const { dispatchToast } = useContext(ToastContext)\r\n\r\n  const handleCloseToast = (toastId) => {\r\n    dispatchToast({ type: REMOVE_TOAST, payload: toastId })\r\n    setVisibility(false)\r\n  }\r\n\r\n  return (\r\n    <BootstrapToast show={isVisible} onClose={() => handleCloseToast(toast.id)}>\r\n      <BootstrapToast.Header>\r\n        <strong className=\"mr-auto\">{toast.title}</strong>\r\n      </BootstrapToast.Header>\r\n      <BootstrapToast.Body>{toast.message}</BootstrapToast.Body>\r\n    </BootstrapToast>\r\n  )\r\n}\r\n\r\nexport default Toast\r\n","import React from \"react\"\r\n\r\nimport Toast from \"app/components/Toast\"\r\n\r\nconst ToastCollection = ({ toasts = [] }) => {\r\n  {\r\n    console.log(toasts)\r\n  }\r\n  return (\r\n    <>\r\n      <div\r\n        aria-live=\"polite\"\r\n        aria-atomic=\"true\"\r\n        style={{\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            top: 0,\r\n            right: 0,\r\n          }}\r\n        >\r\n          {toasts.map((toast) => (\r\n            <Toast key={toast.id} toast={toast} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ToastCollection\r\n","class RestService {\r\n  async get(url) {\r\n    const response = await fetch(url)\r\n    return await response.json()\r\n  }\r\n}\r\n\r\nexport const restService = new RestService()\r\n","// generate mock id\r\nconst generateId = () => {\r\n  const min = 12234\r\n  const max = 43112\r\n\r\n  return Math.floor(Math.random() * max) + min\r\n}\r\n\r\nclass TodoItem {\r\n  constructor(title, isCompleted, creatorId) {\r\n    this.id = generateId()\r\n    this.title = title\r\n    this.isCompleted = isCompleted\r\n    this.creatorId = creatorId\r\n  }\r\n}\r\n\r\nexport default TodoItem\r\n","import { restService } from \"app/services/RestService\"\r\n\r\nimport TodoItem from \"app/models/TodoItem\"\r\n\r\nconst url = \"https://jsonplaceholder.typicode.com/todos\"\r\n\r\nclass TodoItemService {\r\n  async getAll() {\r\n    const rawTodoItems = await restService.get(url)\r\n    return rawTodoItems\r\n      // get todo items user with specified id\r\n      .filter((todoItem) => todoItem.userId === 1)\r\n      .map(\r\n        (todoItem) =>\r\n          new TodoItem(\r\n            todoItem.title,\r\n            todoItem.completed,\r\n            todoItem.userId\r\n          )\r\n      )\r\n  }\r\n}\r\n\r\nexport const todoItemService = new TodoItemService()\r\n","const GET_TODO_ITEMS = \"get-todo-items\"\r\nconst ADD_TODO_ITEM = \"add-todo-item\"\r\nconst REMOVE_TODO_ITEM = \"remove-todo-item\"\r\nconst CHANGE_TODO_ITEM_STATUS = \"change-todo-item-status\"\r\n\r\nconst todoItemReducer = (todoItems, action) => {\r\n  switch (action.type) {\r\n    case GET_TODO_ITEMS:\r\n      return action.payload\r\n    case ADD_TODO_ITEM:\r\n      return [...todoItems, action.payload]\r\n    case REMOVE_TODO_ITEM:\r\n      return todoItems.filter((todoItem) => todoItem.id !== action.payload)\r\n    case CHANGE_TODO_ITEM_STATUS:\r\n      return todoItems.map((todoItem) =>\r\n        todoItem.id === action.payload\r\n          ? { ...todoItem, isCompleted: !todoItem.isCompleted }\r\n          : todoItem\r\n      )\r\n    default:\r\n      throw Error(`Unhandled todo items reducer action type ${action.type}.`)\r\n  }\r\n}\r\n\r\nexport { todoItemReducer }\r\nexport {\r\n  GET_TODO_ITEMS,\r\n  ADD_TODO_ITEM,\r\n  REMOVE_TODO_ITEM,\r\n  CHANGE_TODO_ITEM_STATUS,\r\n}\r\n","import React, { useReducer, useEffect, createContext } from \"react\"\r\n\r\nimport { todoItemService } from \"app/services/TodoItemService\"\r\nimport { GET_TODO_ITEMS, todoItemReducer } from \"app/common/TodoItemReducer\"\r\n\r\nconst TodoItemContext = createContext({})\r\n\r\nconst TodoItemProvider = ({ children }) => {\r\n  const [todoItems, dispatchTodoItems] = useReducer(todoItemReducer, [])\r\n\r\n  useEffect(() => {\r\n    ;(async () => {\r\n      const todoItems = await todoItemService.getAll()\r\n      dispatchTodoItems({ type: GET_TODO_ITEMS, payload: todoItems })\r\n    })()\r\n  }, [])\r\n\r\n  return (\r\n    <TodoItemContext.Provider value={{ todoItems, dispatchTodoItems }}>\r\n      {children}\r\n    </TodoItemContext.Provider>\r\n  )\r\n}\r\n\r\nexport { TodoItemContext, TodoItemProvider }\r\n","// generate mock id\r\nconst generateId = () => {\r\n  const min = 12234\r\n  const max = 43112\r\n\r\n  return Math.floor(Math.random() * max) + min\r\n}\r\n\r\nclass Toast {\r\n  constructor(title, message, visibilityDuration = 1000) {\r\n    this.id = generateId()\r\n    this.title = title\r\n    this.message = message\r\n    this.visibilityDuration = visibilityDuration\r\n  }\r\n}\r\n\r\nexport default Toast\r\n","import React, { useContext } from \"react\"\r\nimport { ListGroup, Button, Form, Col } from \"react-bootstrap\"\r\n\r\nimport { TodoItemContext } from \"app/common/TodoItemContext\"\r\nimport {\r\n  REMOVE_TODO_ITEM,\r\n  CHANGE_TODO_ITEM_STATUS,\r\n} from \"app/common/TodoItemReducer\"\r\n\r\nimport { ToastContext } from \"app/common/ToastContext\"\r\nimport { ADD_TOAST } from \"app/common/ToastReducer\"\r\n\r\nimport Toast from \"app/models/Toast\"\r\n\r\nconst TodoItem = ({ todoItem = {} }) => {\r\n  const { dispatchTodoItems } = useContext(TodoItemContext)\r\n  const { dispatchToast } = useContext(ToastContext)\r\n\r\n  const handleChangeTodoItemStatus = (todoItemId) => {\r\n    dispatchTodoItems({ type: CHANGE_TODO_ITEM_STATUS, payload: todoItemId })\r\n  }\r\n\r\n  const handleRemoveTodoItem = (todoItemId) => {\r\n    dispatchTodoItems({ type: REMOVE_TODO_ITEM, payload: todoItemId })\r\n    dispatchToast({type: ADD_TOAST, payload: new Toast(\"Success\", \"Removed todo item.\")})\r\n  }\r\n\r\n  const CompletedTodoItemTitle = ({ value }) => {\r\n    return (\r\n      <Form.Label className=\"text-muted\">\r\n        <del>{value}</del>\r\n      </Form.Label>\r\n    )\r\n  }\r\n\r\n  const UncompletedTodoItemTitle = ({ value }) => {\r\n    return <Form.Label>{value}</Form.Label>\r\n  }\r\n\r\n  const todoItemTitle = todoItem.isCompleted ? (\r\n    <CompletedTodoItemTitle value={todoItem.title} />\r\n  ) : (\r\n    <UncompletedTodoItemTitle value={todoItem.title} />\r\n  )\r\n\r\n  return (\r\n    <ListGroup.Item onClick={() => handleChangeTodoItemStatus(todoItem.id)}>\r\n      <Form.Group>\r\n        <Form.Row>\r\n          <Col xs={11}>{todoItemTitle}</Col>\r\n          <Col xs={1}>\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"outline-danger\"\r\n              onClick={() => handleRemoveTodoItem(todoItem.id)}\r\n            >\r\n              Remove\r\n            </Button>\r\n          </Col>\r\n        </Form.Row>\r\n      </Form.Group>\r\n    </ListGroup.Item>\r\n  )\r\n}\r\n\r\nexport default TodoItem\r\n","import React from \"react\"\r\nimport { ListGroup } from \"react-bootstrap\"\r\n\r\nimport TodoItem from \"app/components/TodoItem\"\r\n\r\nconst TodoItemCollection = ({ todoItems = [] }) => {\r\n  return (\r\n    <ListGroup variant=\"flush\">\r\n      {todoItems\r\n        .map((todoItem) => <TodoItem key={todoItem.id} todoItem={todoItem} />)\r\n        .reverse()}\r\n    </ListGroup>\r\n  )\r\n}\r\n\r\nexport default TodoItemCollection\r\n","import React, { useState, useContext } from \"react\"\r\n\r\nimport { TodoItemContext } from \"app/common/TodoItemContext\"\r\nimport { ADD_TODO_ITEM } from \"app/common/TodoItemReducer\"\r\n\r\nimport { ToastContext } from \"app/common/ToastContext\"\r\nimport { ADD_TOAST } from \"app/common/ToastReducer\"\r\n\r\nimport TodoItem from \"app/models/TodoItem\"\r\nimport { Button, InputGroup, FormControl } from \"react-bootstrap\"\r\nimport Toast from \"app/models/Toast\"\r\n\r\nconst NewTodoItem = ({ placeholder = \"\" }) => {\r\n  const defaultTodoItemTitle = \"\"\r\n  const [todoItemTitle, setTodoItemTitle] = useState(defaultTodoItemTitle)\r\n  const { dispatchTodoItems } = useContext(TodoItemContext)\r\n\r\n  const { dispatchToast } = useContext(ToastContext)\r\n\r\n  const handleTodoItemTitleChange = (event) => {\r\n    setTodoItemTitle(event.target.value)\r\n  }\r\n\r\n  const handleAddTodoItem = () => {\r\n    const isValidTodoItemTitle = () => {\r\n      const titleRegex = /^\\s*$/\r\n      return titleRegex.exec(todoItemTitle) === null\r\n    }\r\n\r\n    if (isValidTodoItemTitle()) {\r\n      dispatchTodoItems({\r\n        type: ADD_TODO_ITEM,\r\n        payload: new TodoItem(todoItemTitle, false, 1),\r\n      })\r\n      setTodoItemTitle(defaultTodoItemTitle)\r\n\r\n      dispatchToast({\r\n        type: ADD_TOAST,\r\n        payload: new Toast(\"Success\", \"Added new todo item.\"),\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <InputGroup className=\"mb-3\">\r\n      <FormControl\r\n        placeholder={placeholder}\r\n        aria-label={placeholder}\r\n        aria-describedby=\"basic-addon2\"\r\n        value={todoItemTitle}\r\n        onChange={handleTodoItemTitleChange}\r\n      />\r\n      <InputGroup.Append>\r\n        <Button variant=\"outline-primary\" onClick={handleAddTodoItem}>\r\n          Add\r\n        </Button>\r\n      </InputGroup.Append>\r\n    </InputGroup>\r\n  )\r\n}\r\n\r\nexport default NewTodoItem\r\n","import React, { useContext } from \"react\"\r\nimport { Form } from \"react-bootstrap\"\r\n\r\nimport TodoItemCollection from \"app/components/TodoItemCollection\"\r\nimport NewTodoItem from \"app/components/NewTodoItem\"\r\n\r\nimport { TodoItemContext, TodoItemProvider } from \"app/common/TodoItemContext\"\r\n\r\nconst MyTodoList = () => {\r\n  const { todoItems } = useContext(TodoItemContext)\r\n\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Label>React Todo</Form.Label>\r\n          <NewTodoItem placeholder=\"What do you need to do today?\" />\r\n        </Form.Group>\r\n      </Form>\r\n      <TodoItemCollection todoItems={todoItems} />\r\n    </>\r\n  )\r\n}\r\n\r\nconst TodoList = () => {\r\n  return (\r\n    <>\r\n      <TodoItemProvider>\r\n        <MyTodoList />\r\n      </TodoItemProvider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TodoList\r\n","import React, { useContext } from \"react\"\nimport { Container } from \"react-bootstrap\"\n\nimport ToastCollection from \"app/components/ToastCollection\"\nimport TodoList from \"app/views/TodoList\"\n\nimport { ToastContext } from \"app/common/ToastContext\"\n\nconst App = () => {\n  const { toasts } = useContext(ToastContext)\n\n  return (\n    <>\n      <ToastCollection toasts={toasts} />\n      <Container>\n        <TodoList />\n      </Container>\n    </>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport App from \"app/App\"\nimport { ToastProvider } from \"app/common/ToastContext\"\n\nimport \"index.css\"\nimport \"bootstrap/dist/css/bootstrap.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ToastProvider>\n      <App />\n    </ToastProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}