{"version":3,"sources":["app/services/RestService.js","app/services/TodoItemService.js","app/common/TodoItemsReducer.js","app/common/TodoItemsContext.jsx","app/components/TodoItem.jsx","app/components/TodoList.jsx","app/components/NewTodoItem.jsx","app/views/TodoHomePage.jsx","app/App.jsx","index.jsx","app/models/TodoItem.js"],"names":["restService","url","fetch","response","json","require","TodoItem","default","todoItemService","get","rawTodoItems","filter","todoItem","userId","map","id","title","completed","todoItemsReducer","todoItems","action","type","payload","isCompleted","Error","TodoItemsContext","createContext","TodoItemsProvider","children","useReducer","dispatchTodoItems","useEffect","a","getAll","Provider","value","useContext","itemClass","className","isDefaultChecked","defaultChecked","onClick","todoItemId","TodoList","key","NewTodoItem","placeholder","useState","todoItemTitle","setTodoItemTitle","createNewTodoItem","generateId","Math","random","onChange","event","preventDefault","target","exec","TodoHomePage","App","ReactDOM","render","StrictMode","document","getElementById","creatorId","this"],"mappings":"oQAOaA,EAAc,I,qIANfC,G,uFACeC,MAAMD,G,cAAvBE,E,gBACOA,EAASC,O,8SCHlBJ,EAAgBK,EAAQ,IAAxBL,YACSM,EAAaD,EAAQ,GAA9BE,QAqBKC,EAAkB,I,iOAfAR,EAAYS,IAJ/B,8C,cAIFC,E,yBACCA,EACJC,QAAO,SAACC,GAAD,OAAkC,IAApBA,EAASC,UAC9BC,KACC,SAACF,GAAD,OACE,IAAIN,EACFM,EAASG,GACTH,EAASI,MACTJ,EAASK,UACTL,EAASC,Y,yHCXfK,EAAmB,SAACC,EAAWC,GACnC,OAAQA,EAAOC,MACb,IAPY,UAQV,OAAOD,EAAOE,QAChB,IARQ,MASN,MAAM,GAAN,mBAAWH,GAAX,CAAsBC,EAAOE,UAC/B,IATW,SAUT,OAAOH,EAAUR,QAAO,SAACC,GAAD,OAAcA,EAASG,KAAOK,EAAOE,WAC/D,IAVkB,gBAWhB,OAAOH,EAAUL,KAAI,SAACF,GAAD,OACnBA,EAASG,KAAOK,EAAOE,QAAvB,eACSV,EADT,CACmBW,aAAcX,EAASW,cACtCX,KAER,QACE,MAAMY,MAAM,yBAAD,OAA0BJ,EAAOC,KAAjC,QChBXI,EAAmBC,wBAAc,IAEjCC,EAAoB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACHC,qBAAWX,EAAkB,IAD1B,mBACnCC,EADmC,KACxBW,EADwB,KAU1C,OAPAC,qBAAU,WACP,sBAAC,4BAAAC,EAAA,sEACwBxB,EAAgByB,SADxC,OACMd,EADN,OAEAW,EAAkB,CAAET,KDZV,UCYyBC,QAASH,IAF5C,0CAAD,KAIA,IAGD,kBAACM,EAAiBS,SAAlB,CAA2BC,MAAO,CAAEhB,YAAWW,sBAC5CF,ICuBQtB,EApCE,SAAC,GAAuB,IAAD,IAApBM,gBAAoB,MAAT,GAAS,EAC9BkB,EAAsBM,qBAAWX,GAAjCK,kBAUFO,EAAYzB,EAASW,YAAc,CAAEe,UAAW,aAAgB,GAChEC,EAAmB3B,EAASW,YAAc,CAAEiB,gBAAgB,GAAS,GAE3E,OACE,uBAAQH,EACN,yBAAKC,UAAU,cACb,2BAAOA,UAAU,oBACf,yCACEA,UAAU,WACVjB,KAAK,YACDkB,EAHN,CAIEE,QAAS,kBAnBiBC,EAmBgB9B,EAASG,QAlB3De,EAAkB,CAAET,KFNF,gBEMuBC,QAASoB,IADjB,IAACA,MAqB3B9B,EAASI,MACV,uBAAGsB,UAAU,mBAGjB,uBACEA,UAAU,sCACVG,QAAS,kBAvBeC,EAuBY9B,EAASG,QAtBjDe,EAAkB,CAAET,KFXT,SEWuBC,QAASoB,IADhB,IAACA,OCGjBC,EAZE,SAAC,GAAwB,IAAD,IAArBxB,iBAAqB,MAAT,GAAS,EACvC,OACE,yBAAKmB,UAAU,gBACb,wBAAIA,UAAU,wCACXnB,EAAUL,KAAI,SAACF,GAAD,OACb,kBAAC,EAAD,CAAUgC,IAAKhC,EAASG,GAAIH,SAAUA,U,OCiDjCiC,EApDK,SAAC,GAA0B,IAAD,IAAvBC,mBAAuB,MAAT,GAAS,IAEFC,mBADb,IADe,mBAErCC,EAFqC,KAEtBC,EAFsB,KAGpCnB,EAAsBM,qBAAWX,GAAjCK,kBAEFoB,EAAoB,WAExB,IAAMC,EAAa,WAGjB,OAAO,MAAAC,KAAKC,SAFA,OAKd,OAAO,IAAI/C,UAAS6C,IAAcH,GAAe,EAAOG,MAoB1D,OACE,yBAAKb,UAAU,oBACb,2BACEjB,KAAK,OACLiB,UAAU,+BACVQ,YAAaA,EACbX,MAAOa,EACPM,SAxB4B,SAACC,GACjCA,EAAMC,iBACNP,EAAiBM,EAAME,OAAOtB,UAwB5B,4BACEG,UAAU,yDACVG,QAvBoB,WAGoB,OADvB,QACDiB,KAAKV,KAIvBlB,EAAkB,CAAET,KJhCd,MIgCyBC,QAAS4B,MACxCD,EA5ByB,OAyCzB,SClBSU,EAtBM,WAAO,IAClBxC,EAAciB,qBAAWX,GAAzBN,UAER,OACE,yBAAKmB,UAAU,8BAA8BvB,GAAG,gBAC9C,yBAAKuB,UAAU,WACb,yBAAKA,UAAU,+CACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAd,qBACA,kBAAC,EAAD,CAAaQ,YAAY,kCACzB,kBAAC,EAAD,CAAU3B,UAAWA,W,MCFtByC,MAVf,WACE,OACE,yBAAKtB,UAAU,OACb,kBAAC,EAAD,KACE,kBAAC,EAAD,SCLRuB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,iDCDX3D,UARb,WAAYS,EAAIC,EAAOO,EAAa2C,GAAY,oBAC9CC,KAAKpD,GAAKA,EACVoD,KAAKnD,MAAQA,EACbmD,KAAK5C,YAAcA,EACnB4C,KAAKD,UAAYA,K","file":"static/js/main.38ebf31b.chunk.js","sourcesContent":["class RestService {\r\n  async get(url) {\r\n    const response = await fetch(url)\r\n    return await response.json()\r\n  }\r\n}\r\n\r\nexport const restService = new RestService()\r\n","const { restService } = require(\"./RestService\")\r\nconst { default: TodoItem } = require(\"../models/TodoItem\")\r\n\r\nconst url = \"https://jsonplaceholder.typicode.com/todos\"\r\n\r\nclass TodoItemService {\r\n  async getAll() {\r\n    const rawTodoItems = await restService.get(url)\r\n    return rawTodoItems\r\n      .filter((todoItem) => todoItem.userId === 1)\r\n      .map(\r\n        (todoItem) =>\r\n          new TodoItem(\r\n            todoItem.id,\r\n            todoItem.title,\r\n            todoItem.completed,\r\n            todoItem.userId\r\n          )\r\n      )\r\n  }\r\n}\r\n\r\nexport const todoItemService = new TodoItemService()\r\n","const GET_ALL = \"get-all\"\r\nconst ADD = \"add\"\r\nconst REMOVE = \"remove\"\r\nconst CHANGE_STATUS = \"change-status\"\r\n\r\nconst todoItemsReducer = (todoItems, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL:\r\n      return action.payload\r\n    case ADD:\r\n      return [...todoItems, action.payload]\r\n    case REMOVE:\r\n      return todoItems.filter((todoItem) => todoItem.id !== action.payload)\r\n    case CHANGE_STATUS:\r\n      return todoItems.map((todoItem) =>\r\n        todoItem.id === action.payload\r\n          ? { ...todoItem, isCompleted: !todoItem.isCompleted }\r\n          : todoItem\r\n      )\r\n    default:\r\n      throw Error(`Unhandled action type ${action.type}.`)\r\n  }\r\n}\r\n\r\nexport { todoItemsReducer }\r\nexport { GET_ALL, ADD, REMOVE, CHANGE_STATUS }\r\n","import React, { useReducer, useEffect, createContext } from \"react\"\r\nimport { todoItemService } from \"../services/TodoItemService\"\r\nimport { GET_ALL, todoItemsReducer } from \"./TodoItemsReducer\"\r\n\r\nconst TodoItemsContext = createContext({})\r\n\r\nconst TodoItemsProvider = ({ children }) => {\r\n  const [todoItems, dispatchTodoItems] = useReducer(todoItemsReducer, [])\r\n\r\n  useEffect(() => {\r\n    ;(async () => {\r\n      const todoItems = await todoItemService.getAll()\r\n      dispatchTodoItems({ type: GET_ALL, payload: todoItems })\r\n    })()\r\n  }, [])\r\n\r\n  return (\r\n    <TodoItemsContext.Provider value={{ todoItems, dispatchTodoItems }}>\r\n      {children}\r\n    </TodoItemsContext.Provider>\r\n  )\r\n}\r\n\r\nexport { TodoItemsContext, TodoItemsProvider }\r\n","import React, { useContext } from \"react\"\r\n\r\nimport { TodoItemsContext } from \"../common/TodoItemsContext\"\r\nimport { REMOVE, CHANGE_STATUS } from \"../common/TodoItemsReducer\"\r\n\r\nconst TodoItem = ({ todoItem = {} }) => {\r\n  const { dispatchTodoItems } = useContext(TodoItemsContext)\r\n\r\n  const handleChangeTodoItemStatus = (todoItemId) => {\r\n    dispatchTodoItems({ type: CHANGE_STATUS, payload: todoItemId })\r\n  }\r\n\r\n  const handleRemoveTodoItem = (todoItemId) => {\r\n    dispatchTodoItems({ type: REMOVE, payload: todoItemId })\r\n  }\r\n\r\n  const itemClass = todoItem.isCompleted ? { className: \"completed\" } : {}\r\n  const isDefaultChecked = todoItem.isCompleted ? { defaultChecked: true } : {}\r\n\r\n  return (\r\n    <li {...itemClass}>\r\n      <div className=\"form-check\">\r\n        <label className=\"form-check-label\">\r\n          <input\r\n            className=\"checkbox\"\r\n            type=\"checkbox\"\r\n            {...isDefaultChecked}\r\n            onClick={() => handleChangeTodoItemStatus(todoItem.id)}\r\n          />\r\n          {todoItem.title}\r\n          <i className=\"input-helper\"></i>\r\n        </label>\r\n      </div>\r\n      <i\r\n        className=\"remove mdi mdi-close-circle-outline\"\r\n        onClick={() => handleRemoveTodoItem(todoItem.id)}\r\n      ></i>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default TodoItem\r\n","import React from \"react\"\r\nimport TodoItem from \"./TodoItem\"\r\n\r\nconst TodoList = ({ todoItems = [] }) => {\r\n  return (\r\n    <div className=\"list-wrapper\">\r\n      <ul className=\"d-flex flex-column-reverse todo-list\">\r\n        {todoItems.map((todoItem) => (\r\n          <TodoItem key={todoItem.id} todoItem={todoItem} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoList\r\n","import React, { useState, useContext } from \"react\"\r\nimport { TodoItemsContext } from \"../common/TodoItemsContext\"\r\nimport { ADD } from \"../common/TodoItemsReducer\"\r\nimport TodoItem from \"../models/TodoItem\"\r\n\r\nconst NewTodoItem = ({ placeholder = \"\" }) => {\r\n  const defaultTodoItemTitle = \"\"\r\n  const [todoItemTitle, setTodoItemTitle] = useState(defaultTodoItemTitle)\r\n  const { dispatchTodoItems } = useContext(TodoItemsContext)\r\n\r\n  const createNewTodoItem = () => {\r\n    // generate mock id\r\n    const generateId = () => {\r\n      const min = 12234\r\n      const max = 43112\r\n      return Math.random() * (max - min) + min\r\n    }\r\n\r\n    return new TodoItem(generateId(), todoItemTitle, false, generateId())\r\n  }\r\n\r\n  const handleTodoItemTitleChange = (event) => {\r\n    event.preventDefault()\r\n    setTodoItemTitle(event.target.value)\r\n  }\r\n\r\n  const handleAddTodoItem = () => {\r\n    const isValidTodoItemTitle = () => {\r\n      const titleRegex = /^\\s*$/\r\n      return titleRegex.exec(todoItemTitle) === null\r\n    }\r\n\r\n    if (isValidTodoItemTitle()) {\r\n      dispatchTodoItems({ type: ADD, payload: createNewTodoItem() })\r\n      setTodoItemTitle(defaultTodoItemTitle)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-items d-flex\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control todo-list-input\"\r\n        placeholder={placeholder}\r\n        value={todoItemTitle}\r\n        onChange={handleTodoItemTitleChange}\r\n      />\r\n      <button\r\n        className=\"add btn btn-primary font-weight-bold todo-list-add-btn\"\r\n        onClick={handleAddTodoItem}\r\n      >\r\n        Add\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewTodoItem\r\n","import React, { useContext } from \"react\"\r\n\r\nimport TodoList from \"../components/TodoList\"\r\nimport NewTodoItem from \"../components/NewTodoItem\"\r\n\r\nimport { TodoItemsContext } from \"../common/TodoItemsContext\"\r\n\r\nconst TodoHomePage = () => {\r\n  const { todoItems } = useContext(TodoItemsContext)\r\n\r\n  return (\r\n    <div className=\"page-content page-container\" id=\"page-content\">\r\n      <div className=\"padding\">\r\n        <div className=\"row container d-flex justify-content-center\">\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"card px-3\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">Awesome Todo list</h4>\r\n                <NewTodoItem placeholder=\"What do you need to do today?\" />\r\n                <TodoList todoItems={todoItems} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoHomePage\r\n","import React from \"react\"\n\nimport TodoHomePage from \"./views/TodoHomePage\"\nimport { TodoItemsProvider } from \"./common/TodoItemsContext\"\n\nimport \"./App.css\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoItemsProvider>\n        <TodoHomePage />\n      </TodoItemsProvider>\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from \"./app/App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n","class TodoItem {\r\n  constructor(id, title, isCompleted, creatorId) {\r\n    this.id = id\r\n    this.title = title\r\n    this.isCompleted = isCompleted\r\n    this.creatorId = creatorId\r\n  }\r\n}\r\n\r\nexport default TodoItem\r\n"],"sourceRoot":""}